{"version":3,"sources":["api/favoriteApi.js","Components/Product/ProductItem/ProductItem.js","Components/Product/ProductList/ProductList.js","api/brandApi.js","api/colorApi.js","Components/Filter/Filter.js","Components/Recommendation/Recommend.js","pages/Product/ProductPage.jsx","actions/favoriteAction.js","functions/formatMoney.js"],"names":["favoriteApi","createFavorite","customerId","favorite","api","post","url","favoriteProducts","then","res","data","getFavoriteByCustomerId","get","connect","state","AuthToken","props","product","style","marginBottom","className","textDecoration","to","pathname","name","split","join","productId","proName","image","colorDefault","color_Name","onClick","localStorage","getItem","e","ProductId","NumberClick","catch","err","src","alt","width","averageStar","formatMoney","price","textTransform","colorId","ProductList","children","brandApi","getBrand","brands","rs","colorApi","getColors","colors","products","BrandList","dispatch","fetchProducts","actFetchProducts","useState","setBrands","setColors","checked","setChecked","productAll","setProductAll","brand","filters","setFilters","loadBrand","a","productApi","getProducts","useEffect","filterProductsColor","typeFile","target","push","value","index","length","splice","dataFilter","filterKeys","Object","keys","filter","every","eachKey","includes","multiFilter","Accordion","defaultActiveKey","maxWidth","Card","Toggle","as","Header","eventKey","background","float","Collapse","Body","padding","border","paddingTop","paddingBottom","map","i","defaultChecked","onChange","type","borderLeft","borderRight","borderBottom","c","favorites","FavoriteList","setFavoriteProducts","favoriteProductList","filterFavorite","isLoggedIn","favoriteProduct","color","carts","CartList","fetchCart","getNumberInCart","fetchFavorites","types","actFetchFavorites","currentPage","setCurrentPage","productPerPage","location","useLocation","loadProduct","resultList","cusID","console","log","connection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","on","indexOfLastPost","indexOfFirstPost","currentProduct","slice","pageNumbers","Math","ceil","setInterval","currentDate","Date","addDate","dateAdd","getTime","filterCart","marginLeft","result","showProducts","pageId","appId","htmlRef","current","total","onPageChange","money","sMoney","toString","output"],"mappings":"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","file":"static/js/7.7825a51c.chunk.js","sourcesContent":["import api from \"./api\";\r\n\r\nconst createFavorite=(customerId,favorite)=>api.post(api.url.favoriteProducts+customerId,favorite).then(res=>res.data);\r\nconst getFavoriteByCustomerId=(customerId)=>api.get(api.url.favoriteProducts+customerId).then(res=>res.data);\r\n\r\nconst favoriteApi={\r\n    createFavorite,\r\n    getFavoriteByCustomerId\r\n}\r\n\r\nexport default favoriteApi;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./ProductItem.css\";\r\nimport { formatMoney } from \"./../../../functions/formatMoney\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { connect } from \"react-redux\";\r\nimport favoriteApi from \"./../../../api/favoriteApi\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\nconst ProductItem = (props) => {\r\n  // localStorage.setItem(\"currentProduct\",\"\")\r\n  const { product, AuthToken } = props;\r\n  // create favorite\r\n  const addFavorite = (customerId, favorite) => {\r\n    favoriteApi\r\n      .createFavorite(customerId, favorite)\r\n      .then((res) => {})\r\n      .catch((err) => {});\r\n  };\r\n  return (\r\n    <div style={{ marginBottom: \"2.5rem\" }}>\r\n      <div key={product.colorId} className=\"product-item\">\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          to={{\r\n            pathname: `/product/${product.name.split(\" \").join(\"+\")}`,\r\n            state: {\r\n              productId: product.productId,\r\n              proName: product.name,\r\n              image: product.image,\r\n              colorDefault: product.color_Name,\r\n            },\r\n          }}\r\n          onClick={\r\n            localStorage.getItem(\"isLoggedIn\") === \"false\"\r\n              ? null\r\n              : (e) => {\r\n                if(localStorage.getItem(\"isLoggedIn\") === 'true'){\r\n                  addFavorite(\r\n                    \r\n                    localStorage.getItem(\"cusID\") ,\r\n                    { ProductId: product.productId, NumberClick: 1 }\r\n                  );\r\n                }\r\n                }\r\n          }\r\n        >\r\n          <img\r\n            src={product.image}\r\n            alt=\"product image\"\r\n            className=\"img-thumbnail\"\r\n          />\r\n          <div className=\"productName\">\r\n            <span>{product.name}</span>\r\n          </div>\r\n        </Link>\r\n\r\n        <div className=\"row rate-row\">\r\n          <div className=\"rating-inactive\">\r\n            <span className=\"fa fa-star \"></span>\r\n            <span className=\"fa fa-star \"></span>\r\n            <span className=\"fa fa-star \"></span>\r\n            <span className=\"fa fa-star \"></span>\r\n            <span className=\"fa fa-star \"></span>\r\n          </div>\r\n          <div\r\n            className=\"rating-active\"\r\n            style={{ width: `${(product.averageStar*(67/5))}px` }}\r\n          >\r\n            <span className=\"fa fa-star \"></span>\r\n            <span className=\"fa fa-star \"></span>\r\n            <span className=\"fa fa-star \"></span>\r\n            <span className=\"fa fa-star \"></span>\r\n            <span className=\"fa fa-star \"></span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mx-0\">\r\n          <div className=\"col-7 px-0\">\r\n            <span className=\"priceProduct\">\r\n              {formatMoney(product.price)} vnd\r\n            </span>\r\n          </div>\r\n          <div className=\"col-5 px-0\">\r\n            <span className=\"colorName\" style={{ textTransform: \"uppercase\" }}>\r\n              {product.color_Name}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    AuthToken: state.AuthToken,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(ProductItem);\r\n","import React from \"react\";\r\nimport ProductItem from \"../ProductItem/ProductItem\";\r\n\r\nimport './ProductList.css';\r\n\r\n const ProductList =props=>{\r\n\r\n  return (\r\n    <div className=\"container mt-0 pt-0  pb-0 pl-0 pr-0\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;","import api from \"./api\";\r\n\r\nconst getBrand = () =>api.get(api.url.brands).then((rs) => rs.data);\r\n\r\nconst brandApi = {\r\n    getBrand\r\n};\r\n\r\nexport default brandApi;\r\n","import api from \"./api\";\r\n\r\nconst getColors = () =>api.get(api.url.colors).then((rs) => rs.data);\r\n\r\n\r\nconst colorApi = {\r\n    getColors,\r\n};\r\n\r\nexport default colorApi;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Filter.css\";\r\nimport brandApi from \"./../../api/brandApi\";\r\nimport colorApi from \"./../../api/colorApi\";\r\nimport { actFetchProducts } from \"./../../actions/productAction\";\r\nimport productApi from \"./../../api/productApi\";\r\nimport { CRow, CCol } from \"@coreui/react\";\r\nimport { Accordion, Card, Button } from \"react-bootstrap\";\r\n\r\nconst Filter = (props) => {\r\n  const [brands, setBrands] = useState([]);\r\n  const [colors, setColors] = useState([]);\r\n  const { products } = props;\r\n  const [checked, setChecked] = useState(false);\r\n  const [productAll, setProductAll] = useState([]);\r\n\r\n  const [filters, setFilters] = useState({\r\n    color_Name: [],\r\n    brand: [],\r\n    price: [],\r\n  });\r\n  const loadBrand = async () => {\r\n    await brandApi.getBrand().then((res) => setBrands(res));\r\n    await colorApi.getColors().then((res) => setColors(res));\r\n    await productApi.getProducts().then((res) => setProductAll(res));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadBrand();\r\n  }, []);\r\n\r\n  const multiFilter = (productAll, filters) => {\r\n    const filterKeys = Object.keys(filters);\r\n    return productAll.filter((product) => {\r\n      return filterKeys.every((eachKey) => {\r\n        if (!filters[eachKey].length) {\r\n          return true;\r\n        }\r\n        if (eachKey == \"color_Name\") {\r\n          return filters[eachKey].includes(\r\n            product.color_Name\r\n          );\r\n        }\r\n        if (eachKey == \"brand\") {\r\n          return filters[eachKey].includes(\r\n            product.name.split(\" \").splice(-1)[0]\r\n          );\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const filterProductsColor = (e, typeFile) => {\r\n    switch (typeFile) {\r\n      case \"color\":\r\n        if (e.target.checked) {\r\n          filters.color_Name.push(e.target.value);\r\n        } else {\r\n          for (let index = 0; index < filters.color_Name.length; index++) {\r\n            if (filters.color_Name[index] == e.target.value) {\r\n              filters.color_Name.splice(index, 1);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case \"brand\":\r\n        if (e.target.checked) {\r\n          filters.brand.push(e.target.value);\r\n        } else {\r\n          for (let index = 0; index < filters.brand.length; index++) {\r\n            if (filters.brand[index] == e.target.value) {\r\n              filters.brand.splice(index, 1);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n    }\r\n\r\n    setFilters(filters);\r\n    var dataFilter = multiFilter(productAll, filters);\r\n    props.fetchProducts(dataFilter);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Accordion className=\"filter-table\" defaultActiveKey=\"0\" style={{ maxWidth: \"260px\" }}>\r\n        <Card>\r\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{background: \"#F5F5F5\"}}>\r\n            <h4>\r\n              {\" \"}\r\n              Lọc sản phẩm{\" \"}\r\n              <i style={{ float: \"right\" }} className=\"fa-angle-down fa\" />\r\n            </h4>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\"  >\r\n            <Card.Body style={{padding: \"0\"}}>\r\n            {/* Brand filter */}\r\n              <Accordion defaultActiveKey=\"0\"  >\r\n                <Card style={{width: \"100%\",border: \"0\",marginBottom: \"0\"}}>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{border: \"0\"}}>\r\n                    <b>Thương hiệu: </b>\r\n                    <i style={{ float: \"right\" }} className=\"fa-angle-down fa\" />\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"0\" >\r\n                    <Card.Body style={{paddingTop: \"0\", paddingBottom: \"0\"}}>\r\n                      <ul className=\"brand-list \">\r\n                        {brands.map((i, index) => (\r\n                          <li className=\"brand_item\" key={index}>\r\n                            <input\r\n                              key={index}\r\n                              value={i.name}\r\n                              defaultChecked={checked}\r\n                              onChange={(e) => {\r\n                                setChecked(!checked);\r\n                                filterProductsColor(e, \"brand\");\r\n                              }}\r\n                              type=\"checkbox\"\r\n                              className=\"mr-3\"\r\n                            />\r\n                            {i.name}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n\r\n              <Accordion defaultActiveKey=\"0\"  >\r\n                <Card style={{width: \"100%\",borderLeft: \"0\",borderRight:\"0\",borderBottom: \"0\", marginBottom: \"0\"}}>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{border: \"0\"} }>\r\n                    <b>Màu sắc: </b>\r\n                    <i style={{ float: \"right\" }} className=\"fa-angle-down fa\" />\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"0\" >\r\n                    <Card.Body style={{paddingTop: \"0\", paddingBottom: \"0\"}}>\r\n                      <ul className=\"color-list\">\r\n                  {colors.map((c, index) => (\r\n                    <li className=\"brand_item\" key={index}>\r\n                      <input\r\n                        key={index}\r\n                        value={c.name}\r\n                        defaultChecked={checked}\r\n                        onChange={(e) => {\r\n                          setChecked(!checked);\r\n                          filterProductsColor(e, \"color\");\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        className=\"mr-3\"\r\n                      />\r\n                      {c.name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.ProductList,\r\n    // carts: state.CartList,\r\n    brands: state.BrandList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToPro = (dispatch) => {\r\n  return {\r\n    fetchProducts: (products) => {\r\n      dispatch(actFetchProducts(products));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToPro)(Filter);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Recommend.css\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport ImageTest from \"../../assets/image/1.jpg\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { formatMoney } from \"./../../functions/formatMoney\";\r\nconst Recommend = (props) => {\r\n  const { products, AuthToken, favorites } = props;\r\n  const [favoriteProducts, setFavoriteProducts] = useState([]);\r\n  const filterFavorite = (products, favoriteProductList) => {\r\n    return products.filter((product) => {\r\n      return favoriteProductList.includes(product.productId);\r\n    });\r\n  };\r\n  const loadData = () => {\r\n    setFavoriteProducts(filterFavorite(products, favorites));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [favorites]);\r\n\r\n  return (\r\n    <div className=\"widget clearfix\" style={{ maxWidth: \"300px\" }}>\r\n      <div className=\"widget_title\">\r\n        <h4>Sản phẩm gợi ý </h4>\r\n      </div>\r\n      {AuthToken.isLoggedIn === true ? (\r\n        <div>\r\n          {favoriteProducts.map((favoriteProduct, index) => (\r\n            <div className=\"widget_content\" key={index}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/product/${favoriteProduct.name\r\n                    .split(\" \")\r\n                    .join(\"+\")}`,\r\n                  state: {\r\n                    productId: favoriteProduct.productId,\r\n                    proName: favoriteProduct.name,\r\n                    image: favoriteProduct.image,\r\n                  },\r\n                }}\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <div className=\"spost clearfix\">\r\n                  <div className=\"entry-image\">\r\n                    <img src={favoriteProduct.image} />\r\n                  </div>\r\n                  <div className=\"entry-c\">\r\n                    <div className=\"entry-title\">{favoriteProduct.name}</div>\r\n                    <ul className=\"entry-meta\">\r\n                      <li style={{ color: \"red\" }}>\r\n                        {formatMoney(favoriteProduct.price)} đ{\" \"}\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    AuthToken: state.AuthToken,\r\n    favorites:state.FavoriteList\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(Recommend);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ProductList from \"../../Components/Product/ProductList/ProductList\";\r\nimport \"./ProductPage.css\";\r\nimport ProductItem from \"../../Components/Product/ProductItem/ProductItem\";\r\nimport productApi from \"./../../api/productApi\";\r\nimport { actFetchProducts, ProName } from \"./../../actions/productAction\";\r\nimport * as types from \"../../actions/types\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport cartApi from \"./../../api/cartApi\";\r\nimport { getNumberInCart } from \"./../../actions/cartAction\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nimport Pagination from \"react-responsive-pagination\";\r\nimport Filter from \"./../../Components/Filter/Filter\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Recommend from \"./../../Components/Recommendation/Recommend\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport favoriteApi from \"./../../api/favoriteApi\";\r\nimport { actFetchFavorites } from \"./../../actions/favoriteAction\";\r\nimport MessengerCustomerChat from \"react-messenger-customer-chat\";\r\n\r\nconst ProductPage = (props) => {\r\n  const { products, carts, AuthToken } = props;\r\n  const { brands } = props;\r\n  const [pro, setPro] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productPerPage, setProductPerPage] = useState(10);\r\n  const [favoriteProducts, setFavoriteProducts] = useState([]);\r\n\r\n  const location = useLocation();\r\n  // ProName(\"\")\r\n  const loadProduct = async () => {\r\n    //load product into redux\r\n    var resultList = await productApi.getProducts();\r\n    props.fetchProducts(resultList);\r\n    // getFavoriteByCustomerId\r\n    favoriteApi.getFavoriteByCustomerId(AuthToken.cusID).then((res) => {\r\n      console.log(\"res\" + res);\r\n      props.fetchFavorites(res);\r\n    });\r\n  };\r\n  const loadFavorite = () => {\r\n    // getFavoriteByCustomerId\r\n    favoriteApi.getFavoriteByCustomerId(AuthToken.cusID).then((res) => {\r\n      console.log(res);\r\n      props.fetchFavorites(res);\r\n    });\r\n  };\r\n\r\n  const connection = new HubConnectionBuilder()\r\n    .withUrl(\"https://localhost:5001/hubs/shopshoe\")\r\n    .withAutomaticReconnect()\r\n    .build();\r\n\r\n  useEffect(() => {\r\n    loadProduct();\r\n\r\n    connection\r\n      .start()\r\n      .then((res) => {\r\n        console.log(\"result\");\r\n        connection.on(\"Add_Delete_Product\", () => {\r\n          loadProduct();\r\n        });\r\n      })\r\n      .catch((e) => console.log(\"Connection failed: \", e));\r\n  }, []);\r\n  useEffect(() => {\r\n    loadFavorite();\r\n  }, []);\r\n\r\n  const showProducts = (products) => {\r\n    var result = null;\r\n    if (products.length > 0) {\r\n      result = products.map((product, index) => {\r\n        return <ProductItem product={product} key={index} />;\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const indexOfLastPost = currentPage * productPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - productPerPage;\r\n  const currentProduct = products.slice(indexOfFirstPost, indexOfLastPost);\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(products.length / productPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  const name = () => {\r\n    if (location.pathname == \"/\") {\r\n      return \"\";\r\n    }\r\n    return location.pathname.split(\"/\")[2].split(\"+\").join(\" \");\r\n  };\r\n  const filterCart = () => {\r\n    var currentDate = new Date();\r\n    for (let index = 0; index < carts.length; index++) {\r\n      var addDate = new Date(carts[index].dateAdd);\r\n      var expires = (currentDate.getTime() - addDate.getTime()) / 60000;\r\n      if (expires > 10) {\r\n        carts.splice(index, 1);\r\n      }\r\n    }\r\n  };\r\n  setInterval(filterCart(), 10);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"background-light \">\r\n        <div className=\"row  mr-5\" style={{ marginLeft: \"4.3em\" }}>\r\n          <div className=\"col-9 p-0\">\r\n            <h5 style={{ marginLeft: \"3px\" }}>{name()}</h5>\r\n            <ProductList>{showProducts(currentProduct)}</ProductList>\r\n          </div>\r\n          <div className=\"col-3 p-0 my-2\">\r\n            <Filter products={products} />\r\n            <Recommend products={products} />\r\n          </div>\r\n        </div>\r\n\r\n        <MessengerCustomerChat\r\n          pageId=\"108181108126171\"\r\n          appId=\"1194578134370274\"\r\n          htmlRef=\"<REF_STRING>\"\r\n        />\r\n        <Pagination\r\n          className=\"paging\"\r\n          current={currentPage}\r\n          total={pageNumbers.length}\r\n          onPageChange={setCurrentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.ProductList,\r\n    AuthToken: state.AuthToken,\r\n    carts: state.CartList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToPro = (dispatch) => {\r\n  return {\r\n    fetchProducts: (products) => {\r\n      dispatch(actFetchProducts(products));\r\n    },\r\n    fetchCart: (carts) => {\r\n      dispatch(getNumberInCart(carts));\r\n    },\r\n    fetchFavorites: (favorites) => {\r\n      dispatch(actFetchFavorites(favorites));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToPro)(ProductPage);\r\n","import * as types from './types'\r\n\r\nexport const actFetchFavorites = (favorites)=>{\r\n\treturn {\r\n\t\ttype:types.GET_FAVORITE,\r\n\t\tfavorites//payload:order\r\n\t}\r\n}","export const formatMoney = (money) => {\n  var sMoney = money.toString();\n  var output = [];\n  for (let index = 0; index < sMoney.length; index++) {\n    output.push(sMoney[index]);\n  }\n  for (let index = output.length - 3; index > 0; index -= 3) {\n    output.splice(index, 0, \".\");\n  }\n  return output;\n};\n"],"sourceRoot":""}