{"version":3,"sources":["Components/FillForm/FillForm.js","Components/UserInfo/OrderInfo/Detail/Orderdetail.js","functions/formatMoney.js","api/orderApi.js","actions/orderAction.js"],"names":["connect","state","userInfo","UserInfo","dispatch","fetchUserInfo","user","actFetchUser","props","className","placeholder","size","maxLength","type","value","name","readOnly","phoneNumber","rows","cols","address","orders","OrderList","fetchOrder","actFetchOrder","location","useLocation","console","log","updateUserInfo","a","orderApi","getUserOrder","localStorage","getItem","orderList","onCancelOrder","id","Cancelled","cancelOrder","status","then","res","toast","success","catch","err","error","useState","showButton","setShowButton","useEffect","lg","style","background","width","display","color","marginLeft","orderItems","map","item","src","image","alt","product_Name","color_Name","size_Number","formatMoney","price","min","quantity","orderDetailId","colSpan","defaultValue","totalCost","to","onClick","e","orderId","money","sMoney","toString","output","index","length","push","splice","createOrder","data","api","post","url","rs","get","put","PaypalCheckout","order","types"],"mappings":"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","file":"static/js/10.97bbd471.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./FillForm.css\";\nimport { connect } from \"react-redux\";\nimport { actFetchUser } from \"./../../actions/loginAction\";\n// import Autocomplete from \"react-google-autocomplete\";\n\nconst FillForm = (props) => {\n  const { userInfo } = props;\n  // const API_KEY = \"AIzaSyAV235BA8lubinIemH740hNBT3Xj687iEk\";\n  // const [place, setPlace] = useState([]);\n  // useEffect(() => {\n  //   navigator.geolocation.getCurrentPosition(function (position) {\n  //     setPlace(position.coords.latitude);\n  //   });\n  // }, []);\n  return (\n    <div>\n      <h4>Thông tin người mua/nhận hàng</h4>\n      <div className=\"form-group\">\n        <input\n          placeholder=\"Họ và tên\"\n          className=\"form-control \"\n          size={30}\n          maxLength={150}\n          type=\"text\"\n          value={userInfo.name}\n          readOnly\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          placeholder=\"Số điện thoại\"\n          className=\"form-control\"\n          size={30}\n          maxLength={11}\n          type=\"text\"\n          value={userInfo.phoneNumber}\n          readOnly\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          rows={5}\n          cols={20}\n          placeholder=\"Ghi chú\"\n          className=\"form-control\"\n          maxLength={500}\n          type=\"text\"\n          name=\"Notes\"\n          value={userInfo.address}\n          readOnly\n        />\n      </div>\n      {/* <Autocomplete\n        apiKey={API_KEY}\n        onPlaceSelected={(place) => {\n          console.log(place)\n        }}\n      />\n       */}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    userInfo: state.UserInfo,\n  };\n};\nconst mapDispatchToPro = (dispatch) => {\n  return {\n    fetchUserInfo: (user) => {\n      dispatch(actFetchUser(user));\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToPro)(FillForm);\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"./Orderdetail.css\";\r\nimport { connect } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport orderApi from \"./../../../../api/orderApi\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { actFetchOrder } from \"./../../../../actions/orderAction\";\r\nimport { formatMoney } from \"./../../../../functions/formatMoney\";\r\nimport { CRow, CCol } from \"@coreui/react\";\r\nimport FillForm from \"./../../../FillForm/FillForm\";\r\n\r\nconst Orderdetail = (props) => {\r\n  const { orders } = props;\r\n  let location = useLocation();\r\n  console.log(location.state);\r\n\r\n  const updateUserInfo = async () => {\r\n    var orderList = await orderApi.getUserOrder(localStorage.getItem(\"cusID\"));\r\n    props.fetchOrder(orderList);\r\n  };\r\n  const onCancelOrder = async (id,Cancelled) => {\r\n    await orderApi\r\n      .cancelOrder(id,{status:Cancelled})\r\n      .then((res) => {\r\n        toast.success(\"Hủy đơn hàng thành công !\");\r\n        updateUserInfo();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Hủy đơn hàng thất bại !\");\r\n      });\r\n  };\r\n  const [showButton, setShowButton] = useState(\"none\");\r\n\r\n  const checkStatus = (status) => {\r\n    if (status === \"Wait_For_Confirmation\") {\r\n      setShowButton(\"flex\");\r\n    } else {\r\n      setShowButton(\"none\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkStatus(location.state.status);\r\n  }, []);\r\n  return (\r\n    <CRow>\r\n      <CCol lg=\"4\">\r\n        <FillForm />\r\n      </CCol>\r\n      <CCol lg=\"8\">\r\n        <section style={{ background: \"white\", width: \"90%\" }}>\r\n          <div className=\"clearfix mt-0 pb-5\">\r\n            <form>\r\n              <div>\r\n                <div style={{ display: \"inline-flex\" }}>\r\n                  <h4 className=\"flex-start\">Chi tiết sản phẩm của đơn hàng</h4>\r\n                  <h4\r\n                    style={{ color: \"blue\", marginLeft: \"15rem\" }}\r\n                    className=\"flex-end\"\r\n                  >\r\n                    {location.state.status}\r\n                  </h4>\r\n                </div>\r\n\r\n                <table className=\"table table-cart\">\r\n                  {location.state.orderItems.map((item) => (\r\n                    <tbody key={item.orderDetailId}>\r\n                      <tr>\r\n                        <td>\r\n                          <img src={item.image} width={150} alt=\"Product\" />\r\n                        </td>\r\n                        <td>\r\n                          <p>{item.product_Name}</p>\r\n                        </td>\r\n                        <td>\r\n                          <span>{item.color_Name}</span>,\r\n                          <span>{item.size_Number}</span>\r\n                        </td>\r\n                        <td style={{ width: \"220px\" }}>\r\n                          <div>\r\n                            <span>{formatMoney(item.price)} (đ)</span> *\r\n                          </div>\r\n                          <div>\r\n                            <table>\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>\r\n                                    <input\r\n                                      type=\"number\"\r\n                                      className=\"form-control input-text-cart\"\r\n                                      min={1}\r\n                                      value={item.quantity}\r\n                                      readOnly\r\n                                    />\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                          = <b>{formatMoney(item.price * item.quantity)}</b>{\" \"}\r\n                          <span>đ</span>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ))}\r\n\r\n                  <tbody>\r\n                    <tr className=\"text-center\">\r\n                      <td colSpan={2}>Phí vận chuyển:</td>\r\n                      <td colSpan={2}>\r\n                        <span\r\n                          className=\"error-desc\"\r\n                          style={{ display: \"none\" }}\r\n                        />\r\n                        <input\r\n                          type=\"hidden\"\r\n                          name=\"ShippingFee\"\r\n                          defaultValue={0}\r\n                        />\r\n                        <b>0</b> <span>đ</span>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td colSpan={2} className=\"text-center\">\r\n                        Tổng cộng:\r\n                      </td>\r\n                      <td colSpan={2} className=\"text-center\">\r\n                        <b>{formatMoney(location.state.totalCost)}</b>{\" \"}\r\n                        <span>đ</span>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <hr />\r\n                {location.state.status === \"Wait_For_Confirmation\" ? (\r\n                  <Link\r\n                    to=\"/userinfo/orders\"\r\n                    className=\"btn btn-cancle-order btn-danger \"\r\n                    style={{ color: \"white\", display: { showButton } }}\r\n                    type=\"button\"\r\n                    onClick={(e) => onCancelOrder(location.state.orderId,\"Cancelled\")}\r\n                  >\r\n                    Hủy đơn hàng\r\n                  </Link>\r\n                ) : null}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </section>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.OrderList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToPro = (dispatch) => {\r\n  return {\r\n    fetchOrder: (orders) => {\r\n      dispatch(actFetchOrder(orders));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToPro)(Orderdetail);\r\n","export const formatMoney = (money) => {\n  var sMoney = money.toString();\n  var output = [];\n  for (let index = 0; index < sMoney.length; index++) {\n    output.push(sMoney[index]);\n  }\n  for (let index = output.length - 3; index > 0; index -= 3) {\n    output.splice(index, 0, \".\");\n  }\n  return output;\n};\n","import api from \"./api\";\n\nconst createOrder = (data) =>api.post(api.url.orders,data).then((rs) => rs.data);\nconst getUserOrder = (id) => api.get(api.url.orders+\"?customerId=\"+ id).then(res => res.data );\nconst cancelOrder = (id,status) => api.put(api.url.orders+'confirmOrder'+'/'+id,status).then(res => res.data);\nconst PaypalCheckout= (id) => api.get(api.url.orders+'checkout'+'/'+id).then(res => res.data);\n\nconst orderApi={\n    createOrder,getUserOrder,cancelOrder,PaypalCheckout\n}\nexport default orderApi;","import axios from 'axios'\nimport * as types from './types'\n\n\nexport const actFetchOrder=(order)=>{\n\treturn {\n\t\ttype:types.GET_USER_ORDER,\n\t\torder//payload:order\n\t}\n}"],"sourceRoot":""}