{"version":3,"sources":["Components/UserInfo/OrderInfo/OrderInfo.js","functions/formatMoney.js","api/orderApi.js","actions/orderAction.js"],"names":["connect","state","orders","OrderList","AuthToken","dispatch","fetchOrder","actFetchOrder","props","loadData","useHistory","a","isLoggedIn","orderApi","getUserOrder","cusID","orderList","connection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","useEffect","start","then","res","console","log","on","catch","e","updateUserInfo","style","textAlign","marginRight","fontSize","items","fields","key","label","_style","width","sorter","filter","columnFilter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","action","item","index","status","type","className","onClick","id","orderId","cancelOrder","toast","success","err","error","typePayment","class","PaypalCheckout","window","open","focus","alert","totalCost","formatMoney","show_details","to","pathname","orderItems","orderDetailDTOs","money","sMoney","toString","output","length","push","splice","createOrder","data","api","post","url","rs","get","put","order","types"],"mappings":"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","file":"static/js/11.c0a7ae5a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actFetchOrder } from \"./../../../actions/orderAction\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport orderApi from \"./../../../api/orderApi\";\r\nimport SidebarMenu from \"./../Menu/Sidebar/SidebarMenu\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./OrderInfo.css\";\r\nimport { CButton, CDataTable, CCol, CRow } from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { axios } from \"axios\";\r\nimport { faCommentsDollar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { formatMoney } from \"./../../../functions/formatMoney\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\n\r\nconst OrderInfo = (props) => {\r\n  const { orders, AuthToken } = props;\r\n  // console.log(AuthToken);\r\n  var history = useHistory();\r\n  // console.log(orders);\r\n  const loadData = async () => {\r\n    if (AuthToken.isLoggedIn === true) {\r\n      var orderList = await orderApi.getUserOrder(AuthToken.cusID);\r\n      props.fetchOrder(orderList);\r\n    }\r\n  };\r\n  const connection = new HubConnectionBuilder()\r\n    .withUrl(\"https://localhost:5001/hubs/shopshoe\")\r\n    .withAutomaticReconnect()\r\n    .build();\r\n  useEffect(() => {\r\n    loadData();\r\n    connection\r\n      .start()\r\n      .then((res) => {\r\n        console.log(\"result\");\r\n        connection.on(\"Receiving_Order\", () => {\r\n          loadData();\r\n        });\r\n      })\r\n      .catch((e) => console.log(\"Connection failed: \", e));\r\n  }, []);\r\n\r\n  const updateUserInfo = async () => {\r\n    var orderList = await orderApi.getUserOrder(AuthToken.cusID);\r\n    props.fetchOrder(orderList);\r\n  };\r\n\r\n  const onCancelOrder = (id) => {\r\n    orderApi\r\n      .cancelOrder(id, { status: \"Cancelled\" })\r\n      .then((res) => {\r\n        toast.success(\"Hủy đơn hàng thành công !\");\r\n        updateUserInfo();\r\n      })\r\n      .catch((err) => toast.error(\"Hủy đơn hàng thất bại !\"));\r\n  };\r\n\r\n  const fields = [\r\n    { key: \"orderId\", label: \"STT\", _style: { width: \"1%\" } },\r\n    { key: \"dateOrder\", label: \"Ngày đặt hàng\", _style: { width: \"15%\" } },\r\n    { key: \"totalCost\", label: \"Tổng giá\", _style: { width: \"11%\" } },\r\n    {\r\n      key: \"typePayment\",\r\n      label: \"Hình thức thanh toán\",\r\n      _style: { width: \"15%\" },\r\n    },\r\n    { key: \"status\", label: \"Trạng thái đơn hàng\", _style: { width: \"18%\" } },\r\n    {\r\n      key: \"action\",\r\n      label: \"\",\r\n      _style: { width: \"12%\" },\r\n      sorter: false,\r\n      filter: false,\r\n    },\r\n\r\n    {\r\n      key: \"show_details\",\r\n      label: \"\",\r\n      _style: { width: \"10%\" },\r\n      sorter: false,\r\n      filter: false,\r\n    },\r\n  ];\r\n  // payment\r\n  const handlePayment = (orderId) => {\r\n    orderApi\r\n      .PaypalCheckout(orderId)\r\n      .then((res) => {\r\n        window.open(res).focus();\r\n      })\r\n      .catch((err) => alert(err));\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginRight: \"3em\" }}>\r\n      <strong style={{ fontSize: \"30px\" }}>Đơn đặt hàng của bạn</strong>\r\n\r\n      <CDataTable\r\n        items={orders}\r\n        fields={fields}\r\n        columnFilter\r\n        tableFilter\r\n        footer\r\n        itemsPerPageSelect\r\n        itemsPerPage={5}\r\n        hover\r\n        sorter\r\n        pagination\r\n        scopedSlots={{\r\n          action: (item, index) => (\r\n            <td key={item.orderId}>\r\n              {item.status == \"Wait_For_Confirmation\" ? (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => onCancelOrder(item.orderId)}\r\n                >\r\n                  Hủy đơn\r\n                </button>\r\n              ) : item.status == \"Delivering\" &&\r\n                item.typePayment == \"Online\" ? (\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary\"\r\n                  onClick={() => handlePayment(item.orderId)}\r\n                >\r\n                  Thanh toán\r\n                </button>\r\n              ) : null}\r\n            </td>\r\n          ),\r\n          orderId: (item, index) => <td>{index + 1}</td>,\r\n\r\n          totalCost: (item) => (\r\n            <td style={{ textAlign: \"left\" }}>\r\n              {formatMoney(item.totalCost)} đ\r\n            </td>\r\n          ),\r\n          show_details: (item, index) => {\r\n            return (\r\n              <td key={item.orderId}>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/userinfo/detail/${item.orderId}`,\r\n                    state: {\r\n                      orderItems: item.orderDetailDTOs,\r\n                      totalCost: item.totalCost,\r\n                      status: item.status,\r\n                      orderId: item.orderId,\r\n                    },\r\n                  }}\r\n                >\r\n                  <button type=\"button\" className=\"btn btn-success\">\r\n                    Chi tiết\r\n                  </button>\r\n                </Link>\r\n              </td>\r\n            );\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.OrderList,\r\n    AuthToken: state.AuthToken,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchOrder: (orders) => {\r\n      dispatch(actFetchOrder(orders));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderInfo);\r\n","export const formatMoney = (money) => {\n  var sMoney = money.toString();\n  var output = [];\n  for (let index = 0; index < sMoney.length; index++) {\n    output.push(sMoney[index]);\n  }\n  for (let index = output.length - 3; index > 0; index -= 3) {\n    output.splice(index, 0, \".\");\n  }\n  return output;\n};\n","import api from \"./api\";\n\nconst createOrder = (data) =>api.post(api.url.orders,data).then((rs) => rs.data);\nconst getUserOrder = (id) => api.get(api.url.orders+\"?customerId=\"+ id).then(res => res.data );\nconst cancelOrder = (id,status) => api.put(api.url.orders+'confirmOrder'+'/'+id,status).then(res => res.data);\nconst PaypalCheckout= (id) => api.get(api.url.orders+'checkout'+'/'+id).then(res => res.data);\n\nconst orderApi={\n    createOrder,getUserOrder,cancelOrder,PaypalCheckout\n}\nexport default orderApi;","import axios from 'axios'\nimport * as types from './types'\n\n\nexport const actFetchOrder=(order)=>{\n\treturn {\n\t\ttype:types.GET_USER_ORDER,\n\t\torder//payload:order\n\t}\n}"],"sourceRoot":""}